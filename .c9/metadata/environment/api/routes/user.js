{"filter":false,"title":"user.js","tooltip":"/api/routes/user.js","undoManager":{"mark":2,"position":2,"stack":[[{"start":{"row":0,"column":0},"end":{"row":50,"column":24},"action":"insert","lines":["const express = require('express');","const cors = require('cors');","const passport = require('passport');","","const authController = require('../controllers/auth');","","const router = express.Router();","","// use as middleware for routes that need auth","// passport.authenticate('jwt', {session: false})","// example","// router.get(","//      '/path',","//      passport.authenticate('jwt', {session: false}),","//      (req, res) => ....","// )","","// for testing auth route that needs token/cookie once user has logged in","router.get('/testauth', passport.authenticate('jwt', { session: false }), (req, res) => {","  res.send('success!');","});","","// All routes in this file start with `api/auth`","","/*  @route   GET api/auth/test","    @desc    Test auth route","    @access  Public */","router.get('/test', (req, res) => res.json({ msg: 'Auth Route reached' }));","","/*  @route   GET api/auth/users","    @desc    Test route to get all users","    @access  Public */","router.get('/users', authController.getUsers);","","// @route   POST api/auth/register","// @desc    Register user","// @access  Public","router.options('/register', cors());","router.post('/register', cors(), authController.validate('register'), authController.register);","","// @route   POST api/auth/login","// @desc    Login user","// @access  Public","router.post('/login', authController.postLogin);","","// @route   GET api/auth/current","// @desc    Return current user","// @access  Private","router.get('/current', authController.getCurrentUser);","","module.exports = router;"],"id":1}],[{"start":{"row":4,"column":47},"end":{"row":4,"column":51},"action":"remove","lines":["auth"],"id":2},{"start":{"row":4,"column":47},"end":{"row":4,"column":48},"action":"insert","lines":["u"]},{"start":{"row":4,"column":48},"end":{"row":4,"column":49},"action":"insert","lines":["s"]},{"start":{"row":4,"column":49},"end":{"row":4,"column":50},"action":"insert","lines":["e"]},{"start":{"row":4,"column":50},"end":{"row":4,"column":51},"action":"insert","lines":["r"]}],[{"start":{"row":4,"column":6},"end":{"row":4,"column":20},"action":"remove","lines":["authController"],"id":3},{"start":{"row":4,"column":6},"end":{"row":4,"column":20},"action":"insert","lines":["userController"]},{"start":{"row":32,"column":21},"end":{"row":32,"column":35},"action":"remove","lines":["authController"]},{"start":{"row":32,"column":21},"end":{"row":32,"column":35},"action":"insert","lines":["userController"]},{"start":{"row":38,"column":33},"end":{"row":38,"column":47},"action":"remove","lines":["authController"]},{"start":{"row":38,"column":33},"end":{"row":38,"column":47},"action":"insert","lines":["userController"]},{"start":{"row":38,"column":70},"end":{"row":38,"column":84},"action":"remove","lines":["authController"]},{"start":{"row":38,"column":70},"end":{"row":38,"column":84},"action":"insert","lines":["userController"]},{"start":{"row":43,"column":22},"end":{"row":43,"column":36},"action":"remove","lines":["authController"]},{"start":{"row":43,"column":22},"end":{"row":43,"column":36},"action":"insert","lines":["userController"]},{"start":{"row":48,"column":23},"end":{"row":48,"column":37},"action":"remove","lines":["authController"]},{"start":{"row":48,"column":23},"end":{"row":48,"column":37},"action":"insert","lines":["userController"]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":21,"column":0},"end":{"row":21,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1565734193307,"hash":"1e742f65d15f326c20796e8f1d631ee576395a90"}